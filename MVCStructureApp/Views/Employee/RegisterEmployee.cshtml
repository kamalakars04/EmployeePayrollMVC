@model MVCStructureApp.Models.Common.RegisterRequestModel

@{
    ViewBag.Title = "RegisterEmployee";
}

<style>
    .error {
        color: red
    }
</style>

@using (Html.BeginForm("RegisterEmployee", "Employee", FormMethod.Post))
{
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;600&display=swap" rel="stylesheet">

        <link href="~/Content/CustomCss/register.css" rel="stylesheet" />
        <title>Employee payroll form</title>
    </head>

    <body>

        <div>
            <header class="header">Employee Payroll form</header>
        </div>
        <div class="form">
            @Html.HiddenFor(x=>x.EmpId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <label>Name</label>
                @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", id = "NameId" })

            </div>
            @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "error" })
            <div style="display:flex;justify-content:space-around;margin-right:40%;padding-top:10px;">

                <label style="padding: 0px 21px 0px 0px;">Gender</label>
                @Html.RadioButtonFor(model => model.Gender, "Male", new { style = "margin: 4px;margin-left: 12px;" })
                Male

                @Html.RadioButtonFor(model => model.Gender, "Female", new { style = "margin: 4px;margin-left: 12px;" })
                Female
            </div>
            @Html.ValidationMessageFor(x => x.Department, "", new { @class = "error" })
            <div style="display: flex;flex-direction: row;justify-content:flex-start;margin-right: 4px;padding-top: 10px;">

                <label style=" padding: 0px 12px 5px 0px;">Department</label>
                @Html.RadioButtonFor(x => x.Department, "Computer", new { @id = "Computer", style = "margin: 4px;margin-left: 12px;" })
                Computer
                @Html.RadioButtonFor(x => x.Department, "HR", new { id = "HR", style = "margin: 4px;margin-left: 12px;" })
                HR
                @Html.RadioButtonFor(x => x.Department, "Sales", new { id = "Sales", style = "margin: 4px;margin-left: 12px;" })
                Sales
                @Html.RadioButtonFor(x => x.Department, "Engineer", new { id = "Engineer", style = "margin: 4px;margin-left: 12px;" })
                Engineer
                @Html.RadioButtonFor(x => x.Department, "Others", new { id = "Others", style = "margin: 4px;margin-left: 12px;" })
                Others
            </div>
            <div class="row">
                <label>Salary</label>

                @{
                    List<SelectListItem> SalaryList = new List<SelectListItem>();
                }
                @if (Model.salaries != null)
                {
                    for (int i = 0; i < Model.salaries.Count; i++)
                    {
                        @Html.HiddenFor(x => x.salaries[i].Amount)
                        @Html.HiddenFor(x => x.salaries[i].SalaryId)
                        if (SalaryList == null)
                        {
                            SalaryList = new List<SelectListItem>();
                        }
                        SalaryList.Add(new SelectListItem { Text = Model.salaries[i].Amount, Value = Model.salaries[i].SalaryId.ToString() });
                    }
                }
                @Html.ValidationMessageFor(x => x.Salary, "", new { @class = "error" })
                @Html.DropDownListFor(x => x.Salary, SalaryList, "Select Salary", 0)
            </div>
            <div class="row">
                <label>Start Date</label>
                @Html.ValidationMessageFor(x => x.StartDate, "", new { @class = "error" })
                @if (Model.StartDate != new DateTime(0001, 01, 01))
                {
                    @Html.TextBoxFor(x => x.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                }
                else
                {
                    @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control", @type = "date" })
                }
            </div>
            <div class="row">
                <label>Notes</label>
                @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
            </div>
            @if (Model.EmpId == 0)
            {
                <div class="btnColumn">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a href="@Url.Action("RegisterEmployee", "Employee")" class="btn btn-success">Reset</a>
                    <a href="@Url.Action("Index", "Employee")" class="btn btn-success">Employee List</a>
                </div>
            }
            else
            {
                <div class="btnColumn">
                    <button type="submit" name="Update" class="btn btn-primary">Update</button>
                    <a href="@Url.Action("Index", "Employee")" class="btn btn-success">Cancel</a>
                </div>
            }

        </div>
    </body>
    <script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
